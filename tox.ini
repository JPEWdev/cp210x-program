[tox]
envlist = py{36,37,38,39}-{linux}
skip_missing_interpreters = true
isolated_build = true
skipsdist = True

[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    #macos-latest: macos
    #windows-latest: windows

[testenv]
passenv =
    pythonLocation
    CI
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

setenv = PYTHONPATH = {toxinidir}

whitelist_externals =
    bash
    diff

deps =
    pip>=22.0.3
    -rrequirements.txt

commands =
    {toxinidir}/cp210x-program --version
    ./cp210x-program -pc -F testdata/cp2102-orig.hex -f test.out
    diff -us testdata/cp2102-orig.hex test.out

[testenv:lint]
passenv =
    CI
    PYTHONIOENCODING

deps =
    pip>=22.0.3
    pylint
    -rrequirements.txt

commands =
    pylint --fail-under=4 cp210x/ scripts/

[testenv:deploy]
passenv =
    CI
    PYTHONIOENCODING

deps =
    pip>=22.0.3
    wheel
    twine

commands =
    python setup.py sdist
    python setup.py bdist_wheel
    twine check dist/*

[testenv:check]
passenv = CI PYTHON PYTHONIOENCODING
skip_install = true

whitelist_externals = 
    bash

deps =
    pip>=22.0.3
    -rrequirements.txt

commands =
    bash -c 'export WHL_FILE=$(ls dist/*.whl); \
        python -m pip install --force-reinstall $WHL_FILE'
    cp210x-program.py --version

[testenv:readhex]
passenv = CI PYTHON PYTHONIOENCODING
skip_install = true

whitelist_externals =
    bash

deps =
    pip>=22.0.3
    -rrequirements.txt

commands =
    bash -c 'export WHL_FILE=$(ls dist/*.whl); \
        python -m pip install --force-reinstall $WHL_FILE'
    #bash -c 'cp210x-program.py --read-cp210x || echo true'
    cp210x-program.py --read-cp210x -f readhex.out
